var app=angular.module("mcrrcApp",["mcrrcApp.members","mcrrcApp.results","mcrrcApp.authentication","restangular","ui.bootstrap","ui.grid","ui.select","ngSanitize","ui.router","appRoutes"]),membersModule=angular.module("mcrrcApp.members",[]),resultsModule=angular.module("mcrrcApp.results",[]),authenticationModule=angular.module("mcrrcApp.authentication",[]);app.run(["$http","AuthService","Restangular",function($http,AuthService,Restangular){Restangular.setBaseUrl("/api/"),Restangular.setRestangularFields({id:"_id"}),$http.get("/api/login").success(function(data){AuthService.setUser(data.user)}).error(function(data){$scope.message=data[0],$state.go("/login")})}]),angular.module("mcrrcApp.results").controller("MainController",["$scope","AuthService",function(){}]),angular.module("mcrrcApp.results").controller("AdminController",["$scope","AuthService","ResultsService",function($scope,AuthService,ResultsService){$scope.user=AuthService.isLoggedIn(),ResultsService.getRaceTypes({sort:"meters"}).then(function(raceTypes){$scope.racetypesList=raceTypes}),$scope.showAddRaceTypeModal=function(){ResultsService.showAddRaceTypeModal().then(function(racetype){$scope.racetypesList.push(racetype)})},$scope.retrieveRaceTypeForEdit=function(racetype){ResultsService.retrieveRaceTypeForEdit(racetype).then(function(){})},$scope.removeRaceType=function(racetype){ResultsService.deleteRaceType(racetype).then(function(){var index=$scope.racetypesList.indexOf(racetype);index>-1&&$scope.racetypesList.splice(index,1)})}}]),angular.module("mcrrcApp.results").controller("RaceTypeModalInstanceController",["$scope","$modalInstance","racetype",function($scope,$modalInstance,racetype){$scope.editmode=!1,racetype?($scope.formData=racetype,$scope.editmode=!0):($scope.formData={},$scope.editmode=!1),$scope.surfaces=["road","track","cross country","ultra","other"],$scope.addRaceType=function(){$modalInstance.close($scope.formData)},$scope.editRaceType=function(){$modalInstance.close($scope.formData)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("mcrrcApp.authentication").controller("LoginController",["$scope","$http","$state","AuthService",function($scope,$http,$state,AuthService){$http({url:"/api/login",method:"GET"}).success(function(data){$scope.message=data.message}),$scope.login=function(user){$http.post("/api/login",user).success(function(data){AuthService.setUser(data.user),window.location.href="/"}).error(function(data){$scope.message=data[0],$state.go("/login")})}}]),angular.module("mcrrcApp.members").controller("MembersController",["$scope","$http","AuthService","MembersService","ResultsService",function($scope,$http,AuthService,MembersService,ResultsService){$scope.user=AuthService.isLoggedIn(),$scope.membersList=[],$scope.paramModel={},$scope.paramModel.sex=".*",$scope.paramModel.category=".*",$scope.paramModel.limit="",$scope.adminDivisCollapsed=!0,$scope.adminEditMode=!1,$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.showAddMemberModal=function(){MembersService.showAddMemberModal().then(function(member){$scope.membersList.push(member)})},$scope.retrieveMemberForEdit=function(member){MembersService.retrieveMemberForEdit(member).then(function(){})},$scope.removeMember=function(member){MembersService.deleteMember(member).then(function(){var index=$scope.membersList.indexOf(member);index>-1&&$scope.membersList.splice(index,1)})},$scope.setMember=function(member){ResultsService.getResults({limit:20,sort:"-racedate",member:member}).then(function(results){$scope.currentMemberResultList=results}),$scope.currentMember=member},$scope.getMembers=function(){var params={"filters[sex]":$scope.paramModel.sex,"filters[category]":$scope.paramModel.category,limit:$scope.paramModel.limit};MembersService.getMembers(params).then(function(members){$scope.membersList=members})},$scope.retrieveResultForEdit=function(result){ResultsService.retrieveResultForEdit(result).then(function(){})};var defaultParams={"filters[sex]":$scope.paramModel.sex,"filters[category]":$scope.paramModel.category,limit:$scope.paramModel.limit};MembersService.getMembers(defaultParams).then(function(members){$scope.membersList=members})}]),angular.module("mcrrcApp.members").controller("MemberModalInstanceController",["$scope","$modalInstance","member",function($scope,$modalInstance,member){$scope.editmode=!1,member?($scope.formData=member,$scope.editmode=!0):($scope.formData={},$scope.editmode=!1,$scope.formData.dateofbirth=new Date),$scope.addMember=function(){$modalInstance.close($scope.formData)},$scope.editMember=function(){$modalInstance.close($scope.formData)},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0}}]),angular.module("mcrrcApp.authentication").controller("ProfileController",function($scope,$http){$http({url:"/api/profile",method:"GET"}).success(function(data){$scope.user=data.user})}),angular.module("mcrrcApp.results").controller("RecordsController",["$scope","AuthService","ResultsService","$http",function($scope,AuthService,ResultsService){$scope.user=AuthService.isLoggedIn(),$scope.paramModel={},$scope.paramModel.sex=".*",$scope.paramModel.category=".*",$scope.paramModel.mode="All",$scope.paramModel.sort="time",$scope.paramModel.racetype="",$scope.paramModel.limit=5,ResultsService.getRaceTypes().then(function(racetypes){$scope.racetypesList=racetypes}),$scope.getResults=function(){var params={filters:{sex:$scope.paramModel.sex,category:$scope.paramModel.category,mode:$scope.paramModel.mode,racetype:$scope.paramModel.racetype},limit:$scope.paramModel.limit,sort:$scope.paramModel.sort};ResultsService.getResults(params).then(function(results){$scope.resultsList=results})},$scope.retrieveResultForEdit=function(result){ResultsService.retrieveResultForEdit(result).then(function(){})}}]),angular.module("mcrrcApp.results").controller("ResultsController",["$scope","AuthService","ResultsService",function($scope,AuthService,ResultsService){$scope.user=AuthService.isLoggedIn(),$scope.resultsList=[],ResultsService.getResults({limit:15,sort:"-updatedAt"}).then(function(results){$scope.resultsList=results}),$scope.showAddResultModal=function(){ResultsService.showAddResultModal().then(function(result){$scope.resultsList.push(result)})},$scope.retrieveResultForEdit=function(result){ResultsService.retrieveResultForEdit(result).then(function(){})},$scope.removeResult=function(result){ResultsService.deleteResult(result).then(function(){var index=$scope.resultsList.indexOf(result);index>-1&&$scope.resultsList.splice(index,1)})}}]),angular.module("mcrrcApp.results").controller("ResultModalInstanceController",["$scope","$modalInstance","result","MembersService","ResultsService",function($scope,$modalInstance,result,MembersService,ResultsService){MembersService.getMembers().then(function(members){$scope.membersList=members}),ResultsService.getRaceTypes().then(function(racetypes){$scope.racetypesList=racetypes}),$scope.editmode=!1,result?($scope.formData=result,$scope.editmode=!0,$scope.formData.dateofbirth=new Date,$scope.time={},$scope.time.hours=Math.floor($scope.formData.time/3600),$scope.time.minutes=Math.floor($scope.formData.time/60)%60,$scope.time.seconds=$scope.formData.time%60):($scope.formData={},$scope.editmode=!1),$scope.addResult=function(){$scope.formData.time=3600*$scope.time.hours+60*$scope.time.minutes+$scope.time.seconds,$modalInstance.close($scope.formData)},$scope.editResult=function(){$scope.formData.time=3600*$scope.time.hours+60*$scope.time.minutes+$scope.time.seconds,$modalInstance.close($scope.formData)},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0}}]),angular.module("mcrrcApp.authentication").controller("SignUpController",function($scope,$http,$state){$scope.signup=function(user){$http.post("/api/signup",user).success(function(){window.location.href="/"}).error(function(data){$scope.message=data[0],$state.go("/signup")})}});var app=angular.module("mcrrcApp");app.directive("onlyDigitsForMinSec",function(){return{require:"ngModel",restrict:"A",link:function(scope,element,attr,ctrl){function inputValue(val){if(val){var digits=val.replace(/[^0-9]/g,"");return 0>digits&&(digits="0"),digits>59&&(digits="59"),digits!==val&&(ctrl.$setViewValue(digits),ctrl.$render()),parseInt(digits,10)}return void 0}ctrl.$parsers.push(inputValue)}}}),app.directive("onlyDigits",function(){return{require:"ngModel",restrict:"A",link:function(scope,element,attr,ctrl){function inputValue(val){if(val){var digits=val.replace(/[^0-9]/g,"");return digits!==val&&(ctrl.$setViewValue(digits),ctrl.$render()),parseInt(digits,10)}return void 0}ctrl.$parsers.push(inputValue)}}});var app=angular.module("mcrrcApp");app.filter("secondsToTimeStringLong",function(){return function(sec){var hours=Math.floor(sec%86400/3600),minutes=Math.floor(sec%86400%3600/60),seconds=Math.floor(sec%86400%3600%60),timeString="";return hours>0&&(timeString+=hours>1?hours+" hours ":hours+" hour "),minutes>0&&(timeString+=minutes>1?minutes+" minutes ":minutes+" minute "),seconds>=0&&(timeString+=seconds>1?seconds+" seconds ":seconds+" second "),timeString}}),app.filter("secondsToTimeString",function(){return function(sec){var hours=Math.floor(sec%86400/3600),minutes=Math.floor(sec%86400%3600/60),seconds=Math.floor(sec%86400%3600%60);return 10>minutes&&(minutes="0"+minutes),10>seconds&&(seconds="0"+seconds),hours+":"+minutes+":"+seconds}}),app.filter("propsFilter",function(){return function(items,props){var out=[];return angular.isArray(items)?items.forEach(function(item){for(var itemMatches=!1,keys=Object.keys(props),i=0;i<keys.length;i++){var prop=keys[i],text=props[prop].toLowerCase();if(-1!==item[prop].toString().toLowerCase().indexOf(text)){itemMatches=!0;break}}itemMatches&&out.push(item)}):out=items,out}}),app.filter("ageFilter",function(){function calculateAge(birthday){var bd=new Date(birthday),ageDifMs=Date.now()-bd.getTime(),ageDate=new Date(ageDifMs);return Math.abs(ageDate.getUTCFullYear()-1970)}return function(birthdate){return calculateAge(birthdate)}}),angular.module("appRoutes",[]).config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("/",{url:"/",templateUrl:"views/home.html",controller:"ResultsController"}).state("/members",{url:"/members",templateUrl:"views/members.html",controller:"MembersController"}).state("/login",{url:"/login",templateUrl:"views/login.html",controller:"LoginController"}).state("/signup",{url:"/signup",templateUrl:"views/signup.html",controller:"SignUpController"}).state("/profile",{url:"/profile",templateUrl:"views/profile.html",controller:"ProfileController"}).state("/admin",{url:"/admin",templateUrl:"views/admin.html",controller:"AdminController"}).state("/records",{url:"/records",templateUrl:"views/records.html",controller:"RecordsController"})}),angular.module("mcrrcApp").factory("AuthService",function(){var user,factory={};return factory.setUser=function(aUser){user=aUser},factory.isLoggedIn=function(){return user?user:!1},factory}),angular.module("mcrrcApp.members").factory("MembersService",["Restangular","$modal",function(Restangular,$modal){var factory={},members=Restangular.all("members");return factory.getMembers=function(params){return members.getList(params).then(function(members){return members})},factory.getMember=function(id){return Restangular.one("members",id).get().then(function(member){return member},function(res){console.log("Error: "+res.status)})},factory.createMember=function(member){return members.post(member).then(function(){},function(res){console.log("Error: "+res.status)})},factory.editMember=function(member){member.save()},factory.deleteMember=function(member){return member.remove().then(function(){},function(res){console.log("Error: "+res.status)})},factory.showAddMemberModal=function(){var modalInstance=$modal.open({templateUrl:"views/modals/memberModal.html",controller:"MemberModalInstanceController",size:"lg",resolve:{member:!1}});return modalInstance.result.then(function(member){return factory.createMember(member),member},function(){})},factory.retrieveMemberForEdit=function(member){if(member){var modalInstance=$modal.open({templateUrl:"views/modals/memberModal.html",controller:"MemberModalInstanceController",size:"lg",resolve:{member:function(){return member}}});return modalInstance.result.then(function(member){factory.editMember(member)},function(){})}},factory}]),angular.module("mcrrcApp.results").factory("ResultsService",["Restangular","$modal",function(Restangular,$modal){var factory={},results=Restangular.all("results"),racetypes=Restangular.all("racetypes");return factory.getResults=function(params){return results.getList(params).then(function(results){return results})},factory.createResult=function(result){return results.post(result).then(function(){},function(res){console.log("Error: "+res.status)})},factory.editResult=function(result){result.save()},factory.deleteResult=function(result){return result.remove().then(function(){},function(res){console.log("Error: "+res.status)})},factory.showAddResultModal=function(){var modalInstance=$modal.open({templateUrl:"views/modals/resultModal.html",controller:"ResultModalInstanceController",size:"lg",resolve:{result:!1}});return modalInstance.result.then(function(result){return factory.createResult(result),result},function(){})},factory.retrieveResultForEdit=function(result){if(result){var modalInstance=$modal.open({templateUrl:"views/modals/resultModal.html",controller:"ResultModalInstanceController",size:"lg",resolve:{result:function(){return result}}});return modalInstance.result.then(function(result){factory.editResult(result)},function(){})}},factory.getRaceTypes=function(params){return racetypes.getList(params).then(function(racetypes){return racetypes})},factory.createRaceType=function(racetype){return racetypes.post(racetype).then(function(){},function(res){console.log("Error: "+res.status)})},factory.editRaceType=function(racetype){racetype.save()},factory.deleteRaceType=function(racetype){return racetype.remove().then(function(){},function(res){console.log("Error: "+res.status)})},factory.showAddRaceTypeModal=function(){var modalInstance=$modal.open({templateUrl:"views/modals/raceTypeModal.html",controller:"RaceTypeModalInstanceController",size:"lg",resolve:{racetype:!1}});return modalInstance.result.then(function(racetype){return factory.createRaceType(racetype),racetype},function(){})},factory.retrieveRaceTypeForEdit=function(racetype){if(racetype){var modalInstance=$modal.open({templateUrl:"views/modals/raceTypeModal.html",controller:"RaceTypeModalInstanceController",size:"lg",resolve:{racetype:function(){return racetype}}});return modalInstance.result.then(function(racetype){factory.editRaceType(racetype)},function(){})}},factory}]),angular.module("mcrrcApp").factory("UtilsService",function(){var factory={};return factory.calculateAge=function(birthday){var bd=new Date(birthday),ageDifMs=Date.now()-bd.getTime(),ageDate=new Date(ageDifMs);return Math.abs(ageDate.getUTCFullYear()-1970)},factory});