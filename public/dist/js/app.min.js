var app=angular.module("mcrrcApp",["mcrrcApp.services","mcrrcApp.controllers","restangular","ui.bootstrap","ui.grid","ui.select","ngSanitize","ui.router","appRoutes"]),services=angular.module("mcrrcApp.services",[]),controllers=angular.module("mcrrcApp.controllers",[]);app.run(["$http","AuthService","Restangular",function($http,AuthService,Restangular){Restangular.setBaseUrl("/api/"),Restangular.setRestangularFields({id:"_id"}),$http.get("/api/login").success(function(data){AuthService.setUser(data.user)}).error(function(data){$scope.message=data[0],$state.go("/login")})}]),angular.module("mcrrcApp.controllers").controller("AdminController",["$scope","$modal","AuthService","Restangular",function($scope,$modal,AuthService,Restangular){$scope.user=AuthService.isLoggedIn();var racetypes=Restangular.all("racetypes");Restangular.all("racetypes").getList().then(function(racetypes){$scope.racetypesList=racetypes}),$scope.showAddRaceTypeModal=function(){var modalInstance=$modal.open({templateUrl:"raceTypeModal.html",controller:"RaceTypeModalInstanceCtrl",size:"lg",resolve:{racetype:!1}});modalInstance.result.then(function(racetype){$scope.createRaceType(racetype)},function(){})},$scope.retrieveRaceTypeForEdit=function(racetype){if(racetype){var modalInstance=$modal.open({templateUrl:"raceTypeModal.html",controller:"RaceTypeModalInstanceCtrl",size:"lg",resolve:{racetype:function(){return racetype}}});modalInstance.result.then(function(racetype){$scope.editRaceType(racetype)},function(){})}},$scope.createRaceType=function(racetype){racetypes.post(racetype).then(function(racetypes){$scope.racetypesList=racetypes},function(res){console.log("Error: "+res.status)})},$scope.editRaceType=function(racetype){racetype.save()},$scope.deleteRaceType=function(racetype){racetype.remove().then(function(){var index=$scope.racetypesList.indexOf(racetype);index>-1&&$scope.racetypesList.splice(index,1)},function(res){console.log("Error: "+res.status)})}}]),angular.module("mcrrcApp.controllers").controller("RaceTypeModalInstanceCtrl",["$scope","$modalInstance","racetype","Restangular",function($scope,$modalInstance,racetype){$scope.editmode=!1,racetype?($scope.formData=racetype,$scope.editmode=!0):($scope.formData={},$scope.editmode=!1),$scope.surfaces=["road","track","cross country","ultra","other"],$scope.addRaceType=function(){$modalInstance.close($scope.formData)},$scope.editRaceType=function(){$modalInstance.close($scope.formData)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("mcrrcApp.controllers").controller("LoginController",["$scope","$http","$state","AuthService",function($scope,$http,$state,AuthService){$http({url:"/api/login",method:"GET"}).success(function(data){$scope.message=data.message}),$scope.login=function(user){$http.post("/api/login",user).success(function(data){AuthService.setUser(data.user),window.location.href="/"}).error(function(data){$scope.message=data[0],$state.go("/login")})}}]),angular.module("mcrrcApp.controllers").controller("MainController",["$scope","$modal","AuthService","Restangular",function($scope,$modal,AuthService,Restangular){$scope.user=AuthService.isLoggedIn();var results=Restangular.all("results");$scope.resultsList=[],Restangular.all("results").getList().then(function(results){$scope.resultsList=results,$scope.gridOptions={enableSorting:!0,columnDefs:[{name:"racename",field:"time"}],data:$scope.resultsList}}),$scope.showAddResultModal=function(){var modalInstance=$modal.open({templateUrl:"resultModal.html",controller:"ResultModalInstanceCtrl",size:"lg",resolve:{result:!1}});modalInstance.result.then(function(result){$scope.createResult(result)},function(){})},$scope.retrieveResultForEdit=function(result){if(result){var modalInstance=$modal.open({templateUrl:"resultModal.html",controller:"ResultModalInstanceCtrl",size:"lg",resolve:{result:function(){return result}}});modalInstance.result.then(function(result){$scope.editResult(result)},function(){})}},$scope.createResult=function(result){results.post(result).then(function(results){$scope.resultsList=results},function(res){console.log("Error: "+res.status)})},$scope.editResult=function(result){result.save()},$scope.deleteResult=function(result){result.remove().then(function(){var index=$scope.resultsList.indexOf(result);index>-1&&$scope.resultsList.splice(index,1)},function(res){console.log("Error: "+res.status)})}}]),angular.module("mcrrcApp.controllers").controller("ResultModalInstanceCtrl",["$scope","$modalInstance","result","Restangular",function($scope,$modalInstance,result,Restangular){Restangular.all("members").getList().then(function(members){$scope.membersList=members}),Restangular.all("racetypes").getList().then(function(racetypes){$scope.racetypesList=racetypes}),$scope.editmode=!1,result?($scope.formData=result,console.log(result),$scope.editmode=!0,$scope.formData.dateofbirth=new Date,$scope.time={},$scope.time.hours=Math.floor($scope.formData.time/3600),$scope.time.minutes=Math.floor($scope.formData.time/60)%60,$scope.time.seconds=$scope.formData.time%60):($scope.formData={},$scope.editmode=!1),$scope.addResult=function(){$scope.formData.time=3600*$scope.time.hours+60*$scope.time.minutes+$scope.time.seconds,console.log($scope.formData),$modalInstance.close($scope.formData)},$scope.editResult=function(){$scope.formData.time=3600*$scope.time.hours+60*$scope.time.minutes+$scope.time.seconds,$modalInstance.close($scope.formData)},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0}}]),angular.module("mcrrcApp.controllers").controller("ProfileController",function($scope,$http){$http({url:"/api/profile",method:"GET"}).success(function(data){$scope.user=data.user})}),angular.module("mcrrcApp.controllers").controller("RecordController",["$scope","AuthService",function(){}]),angular.module("mcrrcApp.controllers").controller("SignUpController",function($scope,$http,$state){$scope.signup=function(user){$http.post("/api/signup",user).success(function(){window.location.href="/"}).error(function(data){$scope.message=data[0],$state.go("/signup")})}}),angular.module("mcrrcApp.controllers").controller("TeamController",["$scope","$http","$modal","Restangular","AuthService","UtilsService",function($scope,$http,$modal,Restangular,AuthService){$scope.user=AuthService.isLoggedIn();var members=Restangular.all("members");$scope.membersList=[],$scope.adminDivisCollapsed=!0,$scope.adminEditMode=!1,$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.retrieveMemberForEdit=function(member){if(member){var modalInstance=$modal.open({templateUrl:"myModalContent.html",controller:"ModalInstanceCtrl",size:"lg",resolve:{member:function(){return member}}});modalInstance.result.then(function(member){$scope.editMember(member)},function(){})}},$scope.showAddMemberModal=function(){var modalInstance=$modal.open({templateUrl:"myModalContent.html",controller:"ModalInstanceCtrl",size:"lg",resolve:{member:!1}});modalInstance.result.then(function(member){$scope.createMember(member)},function(){})},$scope.setMember=function(member){$scope.currentMember=member},$scope.getMembers=function(){members.getList().then(function(members){return members})};var params={filters:{firstname:"Nicolas",lastname:"Crouzier"},limit:10};members.getList(params).then(function(members){$scope.membersList=members}),$scope.getMember=function(id){return Restangular.one("members",id).get().then(function(member){return member},function(res){console.log("Error: "+res.status)})},$scope.createMember=function(member){members.post(member).then(function(){$scope.membersList.push(member)},function(res){console.log("Error: "+res.status)})},$scope.editMember=function(member){member.save()},$scope.deleteMember=function(member){member.remove().then(function(){var index=$scope.membersList.indexOf(member);index>-1&&$scope.membersList.splice(index,1)},function(res){console.log("Error: "+res.status)})}}]),angular.module("mcrrcApp.controllers").controller("ModalInstanceCtrl",["$scope","$modalInstance","member",function($scope,$modalInstance,member){$scope.editmode=!1,member?($scope.formData=member,$scope.editmode=!0):($scope.formData={},$scope.editmode=!1,$scope.formData.dateofbirth=new Date),$scope.addMember=function(){$modalInstance.close($scope.formData)},$scope.editMember=function(){$modalInstance.close($scope.formData)},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0}}]);var app=angular.module("mcrrcApp");app.directive("onlyDigitsForMinSec",function(){return{require:"ngModel",restrict:"A",link:function(scope,element,attr,ctrl){function inputValue(val){if(val){var digits=val.replace(/[^0-9]/g,"");return 0>digits&&(digits="0"),digits>59&&(digits="59"),digits!==val&&(ctrl.$setViewValue(digits),ctrl.$render()),parseInt(digits,10)}return void 0}ctrl.$parsers.push(inputValue)}}}),app.directive("onlyDigits",function(){return{require:"ngModel",restrict:"A",link:function(scope,element,attr,ctrl){function inputValue(val){if(val){var digits=val.replace(/[^0-9]/g,"");return digits!==val&&(ctrl.$setViewValue(digits),ctrl.$render()),parseInt(digits,10)}return void 0}ctrl.$parsers.push(inputValue)}}});var app=angular.module("mcrrcApp");app.filter("secondsToTimeStringLong",function(){return function(sec){var hours=Math.floor(sec%86400/3600),minutes=Math.floor(sec%86400%3600/60),seconds=Math.floor(sec%86400%3600%60),timeString="";return hours>0&&(timeString+=hours>1?hours+" hours ":hours+" hour "),minutes>0&&(timeString+=minutes>1?minutes+" minutes ":minutes+" minute "),seconds>=0&&(timeString+=seconds>1?seconds+" seconds ":seconds+" second "),timeString}}),app.filter("secondsToTimeString",function(){return function(sec){var hours=Math.floor(sec%86400/3600),minutes=Math.floor(sec%86400%3600/60),seconds=Math.floor(sec%86400%3600%60);return 10>minutes&&(minutes="0"+minutes),10>seconds&&(seconds="0"+seconds),hours+":"+minutes+":"+seconds}}),app.filter("propsFilter",function(){return function(items,props){var out=[];return angular.isArray(items)?items.forEach(function(item){for(var itemMatches=!1,keys=Object.keys(props),i=0;i<keys.length;i++){var prop=keys[i],text=props[prop].toLowerCase();if(-1!==item[prop].toString().toLowerCase().indexOf(text)){itemMatches=!0;break}}itemMatches&&out.push(item)}):out=items,out}}),app.filter("ageFilter",function(){function calculateAge(birthday){var bd=new Date(birthday),ageDifMs=Date.now()-bd.getTime(),ageDate=new Date(ageDifMs);return Math.abs(ageDate.getUTCFullYear()-1970)}return function(birthdate){return calculateAge(birthdate)}}),angular.module("appRoutes",[]).config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("/",{url:"/",controller:"MainController",templateUrl:"views/home.html"}).state("/team",{url:"/team",templateUrl:"views/team.html",controller:"TeamController"}).state("/login",{url:"/login",templateUrl:"views/login.html",controller:"LoginController"}).state("/signup",{url:"/signup",templateUrl:"views/signup.html",controller:"SignUpController"}).state("/profile",{url:"/profile",templateUrl:"views/profile.html",controller:"ProfileController"}).state("/admin",{url:"/admin",templateUrl:"views/admin.html",controller:"AdminController"}).state("/records",{url:"/records",templateUrl:"views/records.html",controller:"RecordController"})}),angular.module("mcrrcApp.services").factory("AuthService",function(){var user,factory={};return factory.setUser=function(aUser){user=aUser},factory.isLoggedIn=function(){return user?user:!1},factory}),angular.module("mcrrcApp.services").factory("UtilsService",function(){var factory={};return factory.calculateAge=function(birthday){var bd=new Date(birthday),ageDifMs=Date.now()-bd.getTime(),ageDate=new Date(ageDifMs);return Math.abs(ageDate.getUTCFullYear()-1970)},factory});